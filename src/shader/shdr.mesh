#version 450
#extension GL_EXT_mesh_shader : require

// 1 workgroup is launched
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

// We will output a maximum of 3 vertices and 1 primitive
layout(max_vertices = 3, max_primitives = 1) out;
layout(triangles) out; // The primitive type is triangles

// Data to pass to the fragment shader
layout(location = 0) out PerVertex {
    vec3 color;
} outVertices[];


void main() {
    // Specify the exact number of outputs for this workgroup
    SetMeshOutputsEXT(3, 1); // 3 vertices, 1 triangle

    // Define the triangle's vertex positions
    gl_MeshVerticesEXT[0].gl_Position = vec4(-1, -1, 0.0, 1.0);
    gl_MeshVerticesEXT[1].gl_Position = vec4(3, -1, 0.0, 1.0);
    gl_MeshVerticesEXT[2].gl_Position = vec4(-1, 3, 0.0, 1.0);
    
    // Assign a color to each vertex
    outVertices[0].color = vec3(1.0, 0.0, 0.0); // Red
    outVertices[1].color = vec3(0.0, 1.0, 0.0); // Green
    outVertices[2].color = vec3(0.0, 0.0, 1.0); // Blue

    gl_PrimitiveTriangleIndicesEXT[0] = uvec3(0, 1, 2);
}